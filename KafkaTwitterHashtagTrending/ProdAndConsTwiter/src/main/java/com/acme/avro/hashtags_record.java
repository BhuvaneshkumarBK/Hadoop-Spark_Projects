/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.acme.avro;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class hashtags_record extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -7636015276702200722L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"hashtags_record\",\"namespace\":\"com.acme.avro\",\"fields\":[{\"name\":\"start\",\"type\":[\"null\",\"int\"],\"default\":\"null\"},{\"name\":\"end\",\"type\":[\"null\",\"int\"],\"default\":\"null\"},{\"name\":\"tag\",\"type\":[\"null\",\"string\"],\"default\":\"null\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public Integer start;
  @Deprecated public Integer end;
  @Deprecated public CharSequence tag;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public hashtags_record() {}

  /**
   * All-args constructor.
   * @param start The new value for start
   * @param end The new value for end
   * @param tag The new value for tag
   */
  public hashtags_record(Integer start, Integer end, CharSequence tag) {
    this.start = start;
    this.end = end;
    this.tag = tag;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public Object get(int field$) {
    switch (field$) {
    case 0: return start;
    case 1: return end;
    case 2: return tag;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, Object value$) {
    switch (field$) {
    case 0: start = (Integer)value$; break;
    case 1: end = (Integer)value$; break;
    case 2: tag = (CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'start' field.
   * @return The value of the 'start' field.
   */
  public Integer getStart() {
    return start;
  }

  /**
   * Sets the value of the 'start' field.
   * @param value the value to set.
   */
  public void setStart(Integer value) {
    this.start = value;
  }

  /**
   * Gets the value of the 'end' field.
   * @return The value of the 'end' field.
   */
  public Integer getEnd() {
    return end;
  }

  /**
   * Sets the value of the 'end' field.
   * @param value the value to set.
   */
  public void setEnd(Integer value) {
    this.end = value;
  }

  /**
   * Gets the value of the 'tag' field.
   * @return The value of the 'tag' field.
   */
  public CharSequence getTag() {
    return tag;
  }

  /**
   * Sets the value of the 'tag' field.
   * @param value the value to set.
   */
  public void setTag(CharSequence value) {
    this.tag = value;
  }

  /**
   * Creates a new hashtags_record RecordBuilder.
   * @return A new hashtags_record RecordBuilder
   */
  public static Builder newBuilder() {
    return new Builder();
  }

  /**
   * Creates a new hashtags_record RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new hashtags_record RecordBuilder
   */
  public static Builder newBuilder(Builder other) {
    return new Builder(other);
  }

  /**
   * Creates a new hashtags_record RecordBuilder by copying an existing hashtags_record instance.
   * @param other The existing instance to copy.
   * @return A new hashtags_record RecordBuilder
   */
  public static Builder newBuilder(hashtags_record other) {
    return new Builder(other);
  }

  /**
   * RecordBuilder for hashtags_record instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<hashtags_record>
    implements org.apache.avro.data.RecordBuilder<hashtags_record> {

    private Integer start;
    private Integer end;
    private CharSequence tag;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.start)) {
        this.start = data().deepCopy(fields()[0].schema(), other.start);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.end)) {
        this.end = data().deepCopy(fields()[1].schema(), other.end);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.tag)) {
        this.tag = data().deepCopy(fields()[2].schema(), other.tag);
        fieldSetFlags()[2] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing hashtags_record instance
     * @param other The existing instance to copy.
     */
    private Builder(hashtags_record other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.start)) {
        this.start = data().deepCopy(fields()[0].schema(), other.start);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.end)) {
        this.end = data().deepCopy(fields()[1].schema(), other.end);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.tag)) {
        this.tag = data().deepCopy(fields()[2].schema(), other.tag);
        fieldSetFlags()[2] = true;
      }
    }

    /**
      * Gets the value of the 'start' field.
      * @return The value.
      */
    public Integer getStart() {
      return start;
    }

    /**
      * Sets the value of the 'start' field.
      * @param value The value of 'start'.
      * @return This builder.
      */
    public Builder setStart(Integer value) {
      validate(fields()[0], value);
      this.start = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'start' field has been set.
      * @return True if the 'start' field has been set, false otherwise.
      */
    public boolean hasStart() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'start' field.
      * @return This builder.
      */
    public Builder clearStart() {
      start = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'end' field.
      * @return The value.
      */
    public Integer getEnd() {
      return end;
    }

    /**
      * Sets the value of the 'end' field.
      * @param value The value of 'end'.
      * @return This builder.
      */
    public Builder setEnd(Integer value) {
      validate(fields()[1], value);
      this.end = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'end' field has been set.
      * @return True if the 'end' field has been set, false otherwise.
      */
    public boolean hasEnd() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'end' field.
      * @return This builder.
      */
    public Builder clearEnd() {
      end = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'tag' field.
      * @return The value.
      */
    public CharSequence getTag() {
      return tag;
    }

    /**
      * Sets the value of the 'tag' field.
      * @param value The value of 'tag'.
      * @return This builder.
      */
    public Builder setTag(CharSequence value) {
      validate(fields()[2], value);
      this.tag = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'tag' field has been set.
      * @return True if the 'tag' field has been set, false otherwise.
      */
    public boolean hasTag() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'tag' field.
      * @return This builder.
      */
    public Builder clearTag() {
      tag = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    public hashtags_record build() {
      try {
        hashtags_record record = new hashtags_record();
        record.start = fieldSetFlags()[0] ? this.start : (Integer) defaultValue(fields()[0]);
        record.end = fieldSetFlags()[1] ? this.end : (Integer) defaultValue(fields()[1]);
        record.tag = fieldSetFlags()[2] ? this.tag : (CharSequence) defaultValue(fields()[2]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
