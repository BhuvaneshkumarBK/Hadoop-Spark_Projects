/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.acme.avro;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class data extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 8492005351618396646L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"data\",\"namespace\":\"com.acme.avro\",\"fields\":[{\"name\":\"author_id\",\"type\":\"string\"},{\"name\":\"context_annotations\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"context_annotations_record\",\"fields\":[{\"name\":\"domain\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"domain\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"string\"],\"default\":\"null\"},{\"name\":\"name\",\"type\":[\"null\",\"string\"],\"default\":\"null\"},{\"name\":\"description\",\"type\":[\"null\",\"string\"],\"default\":\"null\"}]}]},{\"name\":\"entity\",\"type\":{\"type\":\"record\",\"name\":\"entity\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"string\"]},{\"name\":\"name\",\"type\":[\"null\",\"string\"]}]}}]}}},{\"name\":\"conversation_id\",\"type\":\"string\"},{\"name\":\"created_at\",\"type\":\"string\",\"logicalType\":\"date\"},{\"name\":\"entities\",\"type\":{\"type\":\"record\",\"name\":\"entities\",\"fields\":[{\"name\":\"hashtags\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"hashtags_record\",\"fields\":[{\"name\":\"start\",\"type\":[\"null\",\"int\"],\"default\":\"null\"},{\"name\":\"end\",\"type\":[\"null\",\"int\"],\"default\":\"null\"},{\"name\":\"tag\",\"type\":[\"null\",\"string\"],\"default\":\"null\"}]}}},{\"name\":\"mentions\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"mentions_record\",\"fields\":[{\"name\":\"start\",\"type\":\"int\"},{\"name\":\"end\",\"type\":\"int\"},{\"name\":\"username\",\"type\":\"string\"},{\"name\":\"id\",\"type\":\"string\"}]}}}]}},{\"name\":\"geo\",\"type\":{\"type\":\"record\",\"name\":\"geo\",\"fields\":[]}},{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"lang\",\"type\":\"string\"},{\"name\":\"possibly_sensitive\",\"type\":\"boolean\"},{\"name\":\"public_metrics\",\"type\":{\"type\":\"record\",\"name\":\"public_metrics\",\"fields\":[{\"name\":\"retweet_count\",\"type\":\"int\"},{\"name\":\"reply_count\",\"type\":\"int\"},{\"name\":\"like_count\",\"type\":\"int\"},{\"name\":\"quote_count\",\"type\":\"int\"}]}},{\"name\":\"referenced_tweets\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"referenced_tweets_record\",\"fields\":[{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"id\",\"type\":\"string\"}]}}},{\"name\":\"reply_settings\",\"type\":\"string\"},{\"name\":\"source\",\"type\":\"string\"},{\"name\":\"text\",\"type\":\"string\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public CharSequence author_id;
  @Deprecated public java.util.List<context_annotations_record> context_annotations;
  @Deprecated public CharSequence conversation_id;
  @Deprecated public CharSequence created_at;
  @Deprecated public com.acme.avro.entities entities;
  @Deprecated public com.acme.avro.geo geo;
  @Deprecated public CharSequence id;
  @Deprecated public CharSequence lang;
  @Deprecated public boolean possibly_sensitive;
  @Deprecated public com.acme.avro.public_metrics public_metrics;
  @Deprecated public java.util.List<referenced_tweets_record> referenced_tweets;
  @Deprecated public CharSequence reply_settings;
  @Deprecated public CharSequence source;
  @Deprecated public CharSequence text;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public data() {}

  /**
   * All-args constructor.
   * @param author_id The new value for author_id
   * @param context_annotations The new value for context_annotations
   * @param conversation_id The new value for conversation_id
   * @param created_at The new value for created_at
   * @param entities The new value for entities
   * @param geo The new value for geo
   * @param id The new value for id
   * @param lang The new value for lang
   * @param possibly_sensitive The new value for possibly_sensitive
   * @param public_metrics The new value for public_metrics
   * @param referenced_tweets The new value for referenced_tweets
   * @param reply_settings The new value for reply_settings
   * @param source The new value for source
   * @param text The new value for text
   */
  public data(CharSequence author_id, java.util.List<context_annotations_record> context_annotations, CharSequence conversation_id, CharSequence created_at, com.acme.avro.entities entities, com.acme.avro.geo geo, CharSequence id, CharSequence lang, Boolean possibly_sensitive, com.acme.avro.public_metrics public_metrics, java.util.List<referenced_tweets_record> referenced_tweets, CharSequence reply_settings, CharSequence source, CharSequence text) {
    this.author_id = author_id;
    this.context_annotations = context_annotations;
    this.conversation_id = conversation_id;
    this.created_at = created_at;
    this.entities = entities;
    this.geo = geo;
    this.id = id;
    this.lang = lang;
    this.possibly_sensitive = possibly_sensitive;
    this.public_metrics = public_metrics;
    this.referenced_tweets = referenced_tweets;
    this.reply_settings = reply_settings;
    this.source = source;
    this.text = text;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public Object get(int field$) {
    switch (field$) {
    case 0: return author_id;
    case 1: return context_annotations;
    case 2: return conversation_id;
    case 3: return created_at;
    case 4: return entities;
    case 5: return geo;
    case 6: return id;
    case 7: return lang;
    case 8: return possibly_sensitive;
    case 9: return public_metrics;
    case 10: return referenced_tweets;
    case 11: return reply_settings;
    case 12: return source;
    case 13: return text;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, Object value$) {
    switch (field$) {
    case 0: author_id = (CharSequence)value$; break;
    case 1: context_annotations = (java.util.List<context_annotations_record>)value$; break;
    case 2: conversation_id = (CharSequence)value$; break;
    case 3: created_at = (CharSequence)value$; break;
    case 4: entities = (com.acme.avro.entities)value$; break;
    case 5: geo = (com.acme.avro.geo)value$; break;
    case 6: id = (CharSequence)value$; break;
    case 7: lang = (CharSequence)value$; break;
    case 8: possibly_sensitive = (Boolean)value$; break;
    case 9: public_metrics = (com.acme.avro.public_metrics)value$; break;
    case 10: referenced_tweets = (java.util.List<referenced_tweets_record>)value$; break;
    case 11: reply_settings = (CharSequence)value$; break;
    case 12: source = (CharSequence)value$; break;
    case 13: text = (CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'author_id' field.
   * @return The value of the 'author_id' field.
   */
  public CharSequence getAuthorId() {
    return author_id;
  }

  /**
   * Sets the value of the 'author_id' field.
   * @param value the value to set.
   */
  public void setAuthorId(CharSequence value) {
    this.author_id = value;
  }

  /**
   * Gets the value of the 'context_annotations' field.
   * @return The value of the 'context_annotations' field.
   */
  public java.util.List<context_annotations_record> getContextAnnotations() {
    return context_annotations;
  }

  /**
   * Sets the value of the 'context_annotations' field.
   * @param value the value to set.
   */
  public void setContextAnnotations(java.util.List<context_annotations_record> value) {
    this.context_annotations = value;
  }

  /**
   * Gets the value of the 'conversation_id' field.
   * @return The value of the 'conversation_id' field.
   */
  public CharSequence getConversationId() {
    return conversation_id;
  }

  /**
   * Sets the value of the 'conversation_id' field.
   * @param value the value to set.
   */
  public void setConversationId(CharSequence value) {
    this.conversation_id = value;
  }

  /**
   * Gets the value of the 'created_at' field.
   * @return The value of the 'created_at' field.
   */
  public CharSequence getCreatedAt() {
    return created_at;
  }

  /**
   * Sets the value of the 'created_at' field.
   * @param value the value to set.
   */
  public void setCreatedAt(CharSequence value) {
    this.created_at = value;
  }

  /**
   * Gets the value of the 'entities' field.
   * @return The value of the 'entities' field.
   */
  public com.acme.avro.entities getEntities() {
    return entities;
  }

  /**
   * Sets the value of the 'entities' field.
   * @param value the value to set.
   */
  public void setEntities(com.acme.avro.entities value) {
    this.entities = value;
  }

  /**
   * Gets the value of the 'geo' field.
   * @return The value of the 'geo' field.
   */
  public com.acme.avro.geo getGeo() {
    return geo;
  }

  /**
   * Sets the value of the 'geo' field.
   * @param value the value to set.
   */
  public void setGeo(com.acme.avro.geo value) {
    this.geo = value;
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public CharSequence getId() {
    return id;
  }

  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(CharSequence value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'lang' field.
   * @return The value of the 'lang' field.
   */
  public CharSequence getLang() {
    return lang;
  }

  /**
   * Sets the value of the 'lang' field.
   * @param value the value to set.
   */
  public void setLang(CharSequence value) {
    this.lang = value;
  }

  /**
   * Gets the value of the 'possibly_sensitive' field.
   * @return The value of the 'possibly_sensitive' field.
   */
  public Boolean getPossiblySensitive() {
    return possibly_sensitive;
  }

  /**
   * Sets the value of the 'possibly_sensitive' field.
   * @param value the value to set.
   */
  public void setPossiblySensitive(Boolean value) {
    this.possibly_sensitive = value;
  }

  /**
   * Gets the value of the 'public_metrics' field.
   * @return The value of the 'public_metrics' field.
   */
  public com.acme.avro.public_metrics getPublicMetrics() {
    return public_metrics;
  }

  /**
   * Sets the value of the 'public_metrics' field.
   * @param value the value to set.
   */
  public void setPublicMetrics(com.acme.avro.public_metrics value) {
    this.public_metrics = value;
  }

  /**
   * Gets the value of the 'referenced_tweets' field.
   * @return The value of the 'referenced_tweets' field.
   */
  public java.util.List<referenced_tweets_record> getReferencedTweets() {
    return referenced_tweets;
  }

  /**
   * Sets the value of the 'referenced_tweets' field.
   * @param value the value to set.
   */
  public void setReferencedTweets(java.util.List<referenced_tweets_record> value) {
    this.referenced_tweets = value;
  }

  /**
   * Gets the value of the 'reply_settings' field.
   * @return The value of the 'reply_settings' field.
   */
  public CharSequence getReplySettings() {
    return reply_settings;
  }

  /**
   * Sets the value of the 'reply_settings' field.
   * @param value the value to set.
   */
  public void setReplySettings(CharSequence value) {
    this.reply_settings = value;
  }

  /**
   * Gets the value of the 'source' field.
   * @return The value of the 'source' field.
   */
  public CharSequence getSource() {
    return source;
  }

  /**
   * Sets the value of the 'source' field.
   * @param value the value to set.
   */
  public void setSource(CharSequence value) {
    this.source = value;
  }

  /**
   * Gets the value of the 'text' field.
   * @return The value of the 'text' field.
   */
  public CharSequence getText() {
    return text;
  }

  /**
   * Sets the value of the 'text' field.
   * @param value the value to set.
   */
  public void setText(CharSequence value) {
    this.text = value;
  }

  /**
   * Creates a new data RecordBuilder.
   * @return A new data RecordBuilder
   */
  public static Builder newBuilder() {
    return new Builder();
  }

  /**
   * Creates a new data RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new data RecordBuilder
   */
  public static Builder newBuilder(Builder other) {
    return new Builder(other);
  }

  /**
   * Creates a new data RecordBuilder by copying an existing data instance.
   * @param other The existing instance to copy.
   * @return A new data RecordBuilder
   */
  public static Builder newBuilder(data other) {
    return new Builder(other);
  }

  /**
   * RecordBuilder for data instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<data>
    implements org.apache.avro.data.RecordBuilder<data> {

    private CharSequence author_id;
    private java.util.List<context_annotations_record> context_annotations;
    private CharSequence conversation_id;
    private CharSequence created_at;
    private com.acme.avro.entities entities;
    private com.acme.avro.entities.Builder entitiesBuilder;
    private com.acme.avro.geo geo;
    private com.acme.avro.geo.Builder geoBuilder;
    private CharSequence id;
    private CharSequence lang;
    private boolean possibly_sensitive;
    private com.acme.avro.public_metrics public_metrics;
    private com.acme.avro.public_metrics.Builder public_metricsBuilder;
    private java.util.List<referenced_tweets_record> referenced_tweets;
    private CharSequence reply_settings;
    private CharSequence source;
    private CharSequence text;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.author_id)) {
        this.author_id = data().deepCopy(fields()[0].schema(), other.author_id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.context_annotations)) {
        this.context_annotations = data().deepCopy(fields()[1].schema(), other.context_annotations);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.conversation_id)) {
        this.conversation_id = data().deepCopy(fields()[2].schema(), other.conversation_id);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.created_at)) {
        this.created_at = data().deepCopy(fields()[3].schema(), other.created_at);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.entities)) {
        this.entities = data().deepCopy(fields()[4].schema(), other.entities);
        fieldSetFlags()[4] = true;
      }
      if (other.hasEntitiesBuilder()) {
        this.entitiesBuilder = com.acme.avro.entities.newBuilder(other.getEntitiesBuilder());
      }
      if (isValidValue(fields()[5], other.geo)) {
        this.geo = data().deepCopy(fields()[5].schema(), other.geo);
        fieldSetFlags()[5] = true;
      }
      if (other.hasGeoBuilder()) {
        this.geoBuilder = com.acme.avro.geo.newBuilder(other.getGeoBuilder());
      }
      if (isValidValue(fields()[6], other.id)) {
        this.id = data().deepCopy(fields()[6].schema(), other.id);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.lang)) {
        this.lang = data().deepCopy(fields()[7].schema(), other.lang);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.possibly_sensitive)) {
        this.possibly_sensitive = data().deepCopy(fields()[8].schema(), other.possibly_sensitive);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.public_metrics)) {
        this.public_metrics = data().deepCopy(fields()[9].schema(), other.public_metrics);
        fieldSetFlags()[9] = true;
      }
      if (other.hasPublicMetricsBuilder()) {
        this.public_metricsBuilder = com.acme.avro.public_metrics.newBuilder(other.getPublicMetricsBuilder());
      }
      if (isValidValue(fields()[10], other.referenced_tweets)) {
        this.referenced_tweets = data().deepCopy(fields()[10].schema(), other.referenced_tweets);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.reply_settings)) {
        this.reply_settings = data().deepCopy(fields()[11].schema(), other.reply_settings);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.source)) {
        this.source = data().deepCopy(fields()[12].schema(), other.source);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.text)) {
        this.text = data().deepCopy(fields()[13].schema(), other.text);
        fieldSetFlags()[13] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing data instance
     * @param other The existing instance to copy.
     */
    private Builder(com.acme.avro.data other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.author_id)) {
        this.author_id = data().deepCopy(fields()[0].schema(), other.author_id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.context_annotations)) {
        this.context_annotations = data().deepCopy(fields()[1].schema(), other.context_annotations);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.conversation_id)) {
        this.conversation_id = data().deepCopy(fields()[2].schema(), other.conversation_id);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.created_at)) {
        this.created_at = data().deepCopy(fields()[3].schema(), other.created_at);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.entities)) {
        this.entities = data().deepCopy(fields()[4].schema(), other.entities);
        fieldSetFlags()[4] = true;
      }
      this.entitiesBuilder = null;
      if (isValidValue(fields()[5], other.geo)) {
        this.geo = data().deepCopy(fields()[5].schema(), other.geo);
        fieldSetFlags()[5] = true;
      }
      this.geoBuilder = null;
      if (isValidValue(fields()[6], other.id)) {
        this.id = data().deepCopy(fields()[6].schema(), other.id);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.lang)) {
        this.lang = data().deepCopy(fields()[7].schema(), other.lang);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.possibly_sensitive)) {
        this.possibly_sensitive = data().deepCopy(fields()[8].schema(), other.possibly_sensitive);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.public_metrics)) {
        this.public_metrics = data().deepCopy(fields()[9].schema(), other.public_metrics);
        fieldSetFlags()[9] = true;
      }
      this.public_metricsBuilder = null;
      if (isValidValue(fields()[10], other.referenced_tweets)) {
        this.referenced_tweets = data().deepCopy(fields()[10].schema(), other.referenced_tweets);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.reply_settings)) {
        this.reply_settings = data().deepCopy(fields()[11].schema(), other.reply_settings);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.source)) {
        this.source = data().deepCopy(fields()[12].schema(), other.source);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.text)) {
        this.text = data().deepCopy(fields()[13].schema(), other.text);
        fieldSetFlags()[13] = true;
      }
    }

    /**
      * Gets the value of the 'author_id' field.
      * @return The value.
      */
    public CharSequence getAuthorId() {
      return author_id;
    }

    /**
      * Sets the value of the 'author_id' field.
      * @param value The value of 'author_id'.
      * @return This builder.
      */
    public Builder setAuthorId(CharSequence value) {
      validate(fields()[0], value);
      this.author_id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'author_id' field has been set.
      * @return True if the 'author_id' field has been set, false otherwise.
      */
    public boolean hasAuthorId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'author_id' field.
      * @return This builder.
      */
    public Builder clearAuthorId() {
      author_id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'context_annotations' field.
      * @return The value.
      */
    public java.util.List<context_annotations_record> getContextAnnotations() {
      return context_annotations;
    }

    /**
      * Sets the value of the 'context_annotations' field.
      * @param value The value of 'context_annotations'.
      * @return This builder.
      */
    public Builder setContextAnnotations(java.util.List<context_annotations_record> value) {
      validate(fields()[1], value);
      this.context_annotations = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'context_annotations' field has been set.
      * @return True if the 'context_annotations' field has been set, false otherwise.
      */
    public boolean hasContextAnnotations() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'context_annotations' field.
      * @return This builder.
      */
    public Builder clearContextAnnotations() {
      context_annotations = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'conversation_id' field.
      * @return The value.
      */
    public CharSequence getConversationId() {
      return conversation_id;
    }

    /**
      * Sets the value of the 'conversation_id' field.
      * @param value The value of 'conversation_id'.
      * @return This builder.
      */
    public Builder setConversationId(CharSequence value) {
      validate(fields()[2], value);
      this.conversation_id = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'conversation_id' field has been set.
      * @return True if the 'conversation_id' field has been set, false otherwise.
      */
    public boolean hasConversationId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'conversation_id' field.
      * @return This builder.
      */
    public Builder clearConversationId() {
      conversation_id = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'created_at' field.
      * @return The value.
      */
    public CharSequence getCreatedAt() {
      return created_at;
    }

    /**
      * Sets the value of the 'created_at' field.
      * @param value The value of 'created_at'.
      * @return This builder.
      */
    public Builder setCreatedAt(CharSequence value) {
      validate(fields()[3], value);
      this.created_at = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'created_at' field has been set.
      * @return True if the 'created_at' field has been set, false otherwise.
      */
    public boolean hasCreatedAt() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'created_at' field.
      * @return This builder.
      */
    public Builder clearCreatedAt() {
      created_at = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'entities' field.
      * @return The value.
      */
    public com.acme.avro.entities getEntities() {
      return entities;
    }

    /**
      * Sets the value of the 'entities' field.
      * @param value The value of 'entities'.
      * @return This builder.
      */
    public Builder setEntities(com.acme.avro.entities value) {
      validate(fields()[4], value);
      this.entitiesBuilder = null;
      this.entities = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'entities' field has been set.
      * @return True if the 'entities' field has been set, false otherwise.
      */
    public boolean hasEntities() {
      return fieldSetFlags()[4];
    }

    /**
     * Gets the Builder instance for the 'entities' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.acme.avro.entities.Builder getEntitiesBuilder() {
      if (entitiesBuilder == null) {
        if (hasEntities()) {
          setEntitiesBuilder(com.acme.avro.entities.newBuilder(entities));
        } else {
          setEntitiesBuilder(com.acme.avro.entities.newBuilder());
        }
      }
      return entitiesBuilder;
    }

    /**
     * Sets the Builder instance for the 'entities' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public Builder setEntitiesBuilder(com.acme.avro.entities.Builder value) {
      clearEntities();
      entitiesBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'entities' field has an active Builder instance
     * @return True if the 'entities' field has an active Builder instance
     */
    public boolean hasEntitiesBuilder() {
      return entitiesBuilder != null;
    }

    /**
      * Clears the value of the 'entities' field.
      * @return This builder.
      */
    public Builder clearEntities() {
      entities = null;
      entitiesBuilder = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'geo' field.
      * @return The value.
      */
    public com.acme.avro.geo getGeo() {
      return geo;
    }

    /**
      * Sets the value of the 'geo' field.
      * @param value The value of 'geo'.
      * @return This builder.
      */
    public Builder setGeo(com.acme.avro.geo value) {
      validate(fields()[5], value);
      this.geoBuilder = null;
      this.geo = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'geo' field has been set.
      * @return True if the 'geo' field has been set, false otherwise.
      */
    public boolean hasGeo() {
      return fieldSetFlags()[5];
    }

    /**
     * Gets the Builder instance for the 'geo' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.acme.avro.geo.Builder getGeoBuilder() {
      if (geoBuilder == null) {
        if (hasGeo()) {
          setGeoBuilder(com.acme.avro.geo.newBuilder(geo));
        } else {
          setGeoBuilder(com.acme.avro.geo.newBuilder());
        }
      }
      return geoBuilder;
    }

    /**
     * Sets the Builder instance for the 'geo' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public Builder setGeoBuilder(com.acme.avro.geo.Builder value) {
      clearGeo();
      geoBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'geo' field has an active Builder instance
     * @return True if the 'geo' field has an active Builder instance
     */
    public boolean hasGeoBuilder() {
      return geoBuilder != null;
    }

    /**
      * Clears the value of the 'geo' field.
      * @return This builder.
      */
    public Builder clearGeo() {
      geo = null;
      geoBuilder = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public CharSequence getId() {
      return id;
    }

    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public Builder setId(CharSequence value) {
      validate(fields()[6], value);
      this.id = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public Builder clearId() {
      id = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'lang' field.
      * @return The value.
      */
    public CharSequence getLang() {
      return lang;
    }

    /**
      * Sets the value of the 'lang' field.
      * @param value The value of 'lang'.
      * @return This builder.
      */
    public Builder setLang(CharSequence value) {
      validate(fields()[7], value);
      this.lang = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'lang' field has been set.
      * @return True if the 'lang' field has been set, false otherwise.
      */
    public boolean hasLang() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'lang' field.
      * @return This builder.
      */
    public Builder clearLang() {
      lang = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'possibly_sensitive' field.
      * @return The value.
      */
    public Boolean getPossiblySensitive() {
      return possibly_sensitive;
    }

    /**
      * Sets the value of the 'possibly_sensitive' field.
      * @param value The value of 'possibly_sensitive'.
      * @return This builder.
      */
    public Builder setPossiblySensitive(boolean value) {
      validate(fields()[8], value);
      this.possibly_sensitive = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'possibly_sensitive' field has been set.
      * @return True if the 'possibly_sensitive' field has been set, false otherwise.
      */
    public boolean hasPossiblySensitive() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'possibly_sensitive' field.
      * @return This builder.
      */
    public Builder clearPossiblySensitive() {
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'public_metrics' field.
      * @return The value.
      */
    public com.acme.avro.public_metrics getPublicMetrics() {
      return public_metrics;
    }

    /**
      * Sets the value of the 'public_metrics' field.
      * @param value The value of 'public_metrics'.
      * @return This builder.
      */
    public Builder setPublicMetrics(com.acme.avro.public_metrics value) {
      validate(fields()[9], value);
      this.public_metricsBuilder = null;
      this.public_metrics = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'public_metrics' field has been set.
      * @return True if the 'public_metrics' field has been set, false otherwise.
      */
    public boolean hasPublicMetrics() {
      return fieldSetFlags()[9];
    }

    /**
     * Gets the Builder instance for the 'public_metrics' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.acme.avro.public_metrics.Builder getPublicMetricsBuilder() {
      if (public_metricsBuilder == null) {
        if (hasPublicMetrics()) {
          setPublicMetricsBuilder(com.acme.avro.public_metrics.newBuilder(public_metrics));
        } else {
          setPublicMetricsBuilder(com.acme.avro.public_metrics.newBuilder());
        }
      }
      return public_metricsBuilder;
    }

    /**
     * Sets the Builder instance for the 'public_metrics' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public Builder setPublicMetricsBuilder(com.acme.avro.public_metrics.Builder value) {
      clearPublicMetrics();
      public_metricsBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'public_metrics' field has an active Builder instance
     * @return True if the 'public_metrics' field has an active Builder instance
     */
    public boolean hasPublicMetricsBuilder() {
      return public_metricsBuilder != null;
    }

    /**
      * Clears the value of the 'public_metrics' field.
      * @return This builder.
      */
    public Builder clearPublicMetrics() {
      public_metrics = null;
      public_metricsBuilder = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'referenced_tweets' field.
      * @return The value.
      */
    public java.util.List<referenced_tweets_record> getReferencedTweets() {
      return referenced_tweets;
    }

    /**
      * Sets the value of the 'referenced_tweets' field.
      * @param value The value of 'referenced_tweets'.
      * @return This builder.
      */
    public Builder setReferencedTweets(java.util.List<referenced_tweets_record> value) {
      validate(fields()[10], value);
      this.referenced_tweets = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'referenced_tweets' field has been set.
      * @return True if the 'referenced_tweets' field has been set, false otherwise.
      */
    public boolean hasReferencedTweets() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'referenced_tweets' field.
      * @return This builder.
      */
    public Builder clearReferencedTweets() {
      referenced_tweets = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'reply_settings' field.
      * @return The value.
      */
    public CharSequence getReplySettings() {
      return reply_settings;
    }

    /**
      * Sets the value of the 'reply_settings' field.
      * @param value The value of 'reply_settings'.
      * @return This builder.
      */
    public Builder setReplySettings(CharSequence value) {
      validate(fields()[11], value);
      this.reply_settings = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'reply_settings' field has been set.
      * @return True if the 'reply_settings' field has been set, false otherwise.
      */
    public boolean hasReplySettings() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'reply_settings' field.
      * @return This builder.
      */
    public Builder clearReplySettings() {
      reply_settings = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'source' field.
      * @return The value.
      */
    public CharSequence getSource() {
      return source;
    }

    /**
      * Sets the value of the 'source' field.
      * @param value The value of 'source'.
      * @return This builder.
      */
    public Builder setSource(CharSequence value) {
      validate(fields()[12], value);
      this.source = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'source' field has been set.
      * @return True if the 'source' field has been set, false otherwise.
      */
    public boolean hasSource() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'source' field.
      * @return This builder.
      */
    public Builder clearSource() {
      source = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'text' field.
      * @return The value.
      */
    public CharSequence getText() {
      return text;
    }

    /**
      * Sets the value of the 'text' field.
      * @param value The value of 'text'.
      * @return This builder.
      */
    public Builder setText(CharSequence value) {
      validate(fields()[13], value);
      this.text = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'text' field has been set.
      * @return True if the 'text' field has been set, false otherwise.
      */
    public boolean hasText() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'text' field.
      * @return This builder.
      */
    public Builder clearText() {
      text = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    @Override
    public data build() {
      try {
        data record = new data();
        record.author_id = fieldSetFlags()[0] ? this.author_id : (CharSequence) defaultValue(fields()[0]);
        record.context_annotations = fieldSetFlags()[1] ? this.context_annotations : (java.util.List<context_annotations_record>) defaultValue(fields()[1]);
        record.conversation_id = fieldSetFlags()[2] ? this.conversation_id : (CharSequence) defaultValue(fields()[2]);
        record.created_at = fieldSetFlags()[3] ? this.created_at : (CharSequence) defaultValue(fields()[3]);
        if (entitiesBuilder != null) {
          record.entities = this.entitiesBuilder.build();
        } else {
          record.entities = fieldSetFlags()[4] ? this.entities : (com.acme.avro.entities) defaultValue(fields()[4]);
        }
        if (geoBuilder != null) {
          record.geo = this.geoBuilder.build();
        } else {
          record.geo = fieldSetFlags()[5] ? this.geo : (com.acme.avro.geo) defaultValue(fields()[5]);
        }
        record.id = fieldSetFlags()[6] ? this.id : (CharSequence) defaultValue(fields()[6]);
        record.lang = fieldSetFlags()[7] ? this.lang : (CharSequence) defaultValue(fields()[7]);
        record.possibly_sensitive = fieldSetFlags()[8] ? this.possibly_sensitive : (Boolean) defaultValue(fields()[8]);
        if (public_metricsBuilder != null) {
          record.public_metrics = this.public_metricsBuilder.build();
        } else {
          record.public_metrics = fieldSetFlags()[9] ? this.public_metrics : (com.acme.avro.public_metrics) defaultValue(fields()[9]);
        }
        record.referenced_tweets = fieldSetFlags()[10] ? this.referenced_tweets : (java.util.List<referenced_tweets_record>) defaultValue(fields()[10]);
        record.reply_settings = fieldSetFlags()[11] ? this.reply_settings : (CharSequence) defaultValue(fields()[11]);
        record.source = fieldSetFlags()[12] ? this.source : (CharSequence) defaultValue(fields()[12]);
        record.text = fieldSetFlags()[13] ? this.text : (CharSequence) defaultValue(fields()[13]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
